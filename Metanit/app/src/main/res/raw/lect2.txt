<style>h3 {margin-bottom: -15px; }</style><center><h3>2. Базовые стандартные типы</h3></center>
На первом занятии мы познакомились с понятием переменной.
Переменные применяются в программе для хранения часто используемых
данных. Каждая переменная имеет имя и может хранить значения
определенного типа, например, целые числа, вещественные числа и др.
2.1. Целый тип данных
В алгоритмическом языке C++ существует четыре целых типов данных
для представления целых чисел: int (целый), char (символьный), wchar_t
(расширенный символьный), bool (логический). Существует четыре
спецификатора, уточняющих внутреннее представление и диапазон
значений: short (короткий), long (длинный), signed (знаковый),
unsigned (беззнаковый).
Тип Диапазон значений Объем памяти
Bool true и false 1
Char -127..127 1
unsigned char 0..255 1
Int -32768..32767 2
unsigned short int 0..65535 2
long int -2147483..2147483647 4
unsigned long int 0..4294967295 4
Тип int тождественен типу short int.
Над величинами целого типа определены следующие операции:
сложение (+), вычитание (-), умножение (*), деление нацело (/), получение
остатка от деления (%).
Примеры.
N=123, a=N/6 (a=20), b=1/3 (b=0),
c=N%6 (c=3), d=N%2 (d=0).
Здесь надо отметить, что при делении нацело (/) на 10 отбрасывается
последняя цифра (M=287, d=N/10, d=28), а при получении остатка от деления
(%) на 10 мы получаем последнюю цифру (M=287, r=N%10, r=7).
Тип char, как и другие целые типы, может быть со знаком или без
знака. В величинах со знаком можно хранить значения в диапазоне от -127 до
127. При использовании спецификатора unsigned значения могут находиться
в пределах от 0 до 255. Это достаточно для хранения любого символа из 256-
символьного набора ASCII (American Standard Code For Information
Interchange - американский стандартный код для обмена информацией). Этот
набор символы заглавных и строчных букв, цифр и других различных
символов, включая специальные управляющие символы.
Традиционная запись символьного значения представляет собой
символ, заключенный в одиночные кавычки: 'A', 'a', 'z', 'я',
'(', ' '(пробел) и т. п.
2.2. Вещественный тип
Вещественные значения могут записываться несколькими способами:
195324 0 -41. +1951
-1.941 0.0011 -1812.000 .05
124E+2 -2.1E-15 9E4 0.1981e31
Как видно, они могут быть представлены: как целые, если дробная часть
равна 0; обычным способом с десятичной точкой; в экспоненциальном
формате. Экспоненциальный формат соответствует умножению на заданную
степень 10. Например, -2.1E-15=-2.1×10-15
. Написание буквы E может
быть как прописным, так и строчным.
Стандарт C++ определяет три типа данных для хранения вещественных
значений: float (вещественный), double (вещественный с двойной
точностью) и long double.
Тип Диапазон значений Количество
цифр
Объем
памяти
float 3.4e-38..3.4e+38 11-12 4
double 1.7e-308..1.7e+308 15-16 8
long double 3.4e-4932..3.4e+4932 19-20 10
2.3. Стандартные математические функции
C++ унаследовал из C стандартные математические функции, описание
которых находится в заголовочных файлах <math.h> (<cmath>),
<stdlib.h>.
Заголовочный файл <math.h>
acos Возвращает арккосинус аргумента
asin Возвращает арксинус аргумента
atan Возвращает арктангенс аргумента
atan2 Возвращает арктангенс отношения аргументов
ceil Округляет вверх
cos Вычисляет косинус
cosh Вычисляет гиперболический косинус
exp Возвращает степень числа e
fabs Возвращает модуль числа
floor Округляет вниз
fmod(x,y) Возвращает остаток от деления x на y
frexp Выделяет из числа мантиссу и экспоненциальную часть
ldexp Преобразует мантиссу и показатель степени в число
log Вычисляет натуральный логарифм
log10 Вычисляет логарифм по основанию 10
modf Разбивает число на целую и дробную части
pow(x,y) Возводит число в степень (x
y
)
M_PI Константа π=3.1415926
sin Вычисляет синус
sinh Вычисляет гиперболический синус
sqrt Вычисляет квадратный корень
tan Возвращает тангенс аргумента
tanh Возвращает гиперболический тангенс аргумента
Заголовочный файл <stdlib.h>
abort Прерывает выполнение программы
abs Возвращает модуль числа
atof Преобразует строку в вещественное число
atoi Преобразует строку в целое число
atol Преобразует строку в длинное целое число
bsearch Ищет элемент в отсортированном массиве
calloc Выделяет блок памяти
div Делит с остатком
exit Прерывает выполнение программы
labs Возвращает модуль числа
malloc Выделяет блок памяти
qsort Сортирует заданный массив
rand Генерирует случайные числа в диапазоне от 0 до RAND_MAX
random(n) Генерирует случайные числа в диапазоне от 0 до n-1
randomize
srand Устанавливает начальное псевдослучайное число
strtod Преобразует строку в число
strtol Преобразует строку в число с учетом системы счисления
strtoul Преобразует строку в число с учетом системы счисления
Пример
#include <math.h>
#include <stdlib.h>
#include <stdio.h>
void main()
{
float u, d, y, x; int r, k ,n;
 x= 123.589; n=100;
y=sin(M_PI/6); //a=0.5
 randomize();
r=rand(); //случайное число из диапазона 0.. RAND_MAX
k=random(n); //случайное число из диапазона 0..n-1
u=ceil(x); d=floor(x); //u=124; d=123
printf("y=%.2f r=%d k=%i u=%.0f d=%.0f\n",y,r,k,u,d);
}
RAND_MAX=32677.