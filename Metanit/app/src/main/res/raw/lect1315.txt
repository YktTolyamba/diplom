<style>h3 {margin-bottom: -15px; }</style><center><h3>7. Двумерные массивы</h3></center>
Двумерный массив – структура данных, хранящая прямоугольную матрицу.
В матрице каждый элемент определяется номером строки и номером
столбца, но на пересечении которых он расположен.
На экране двумерный массив должен выйти как матрица – таблица.
Ввод двумерного массива
Описание матрицы 3х3
int a[3][3],i,j;
1-й индекс указывает строку
2-й индекс указывает столбец.
В памяти будет следующее расположение: сперва идет первая строка, потом
вторая и т.д.
a00 a01 a02 a10 a11 a12 a20 a21 a22
Пример 1:
(ненаглядный ввод) (наглядный ввод)
for (i=0; i<=2; i++)
for (j=0; j<=2; j++)
scanf(“%i”, &a[i][j]);
for (i=0; i<=2; i++)
for (j=0; j<=2; j++)
{printf(“a%i%i=”,i,j);
scanf(“%i”, &a[i][j]);}
Если работаем с числами, то можем ставить сколько угодно пробелов. Это
надо для наглядности, как бы зрительно форматировать. Лучше делать
форматирование по правой границе.
_ _ 1 _ _ – 4 _ 1
1 2 3 _ 1 2 5 _ 2
Замечание: Это нужно, когда будем работать с файлами – для удобства
пользователя.
Пример 2: (Ввод случайных чисел).
Для того, чтобы использовать генератор случайных чисел, нужно включить
файл stdlib.h.
randomize();
rand(); - разыгрывает случайные числа от [0,1)
random(n) – целые числа 0 … n-1
#include <stdlib.h>
2
const n=3;
float a[n+1][n+1]; int i,j;
for (i=0; i<=2; i++)
for (j=0; j<=2; j++)
a[i][j]=6*rand();
Вопрос: a[i][j] – какие будут? В каких пределах?
Пример 3: Ввод инициализацией.
int x[3][3] = {{1,2,3},{4,5,6},{7,8,9}};
Каждая строка инициализируется отдельно.
Можно ли инициализировать некоторую часть? Ответ: Нет, будет ошибка.
Массив можно ввести константой (если const, то не имеем права менять).
Пример: Дан двумерный массив n x n. В каждой строке найти
местоположение и значение максимального элемента. Если их несколько, то
любой из них.
void main()
{int a[10][10],i,j,k,n;
print(“n=”); scanf(“%i”, &n); // вводим размерность массива
// можем ввести 11, 12? 3 можем?
for (i=0; i<n; i++)
for (j=0; j<n; j++)
scanf(“%i”, &a[i][j]);
//каждая строка – как одномерный массив
for (i=0; i<n; i++)
 {k=0;
 for (j=0; j<n; j++) //если j=0, тогда сравнение с собой
 if (a[i][k]<a[i][j]) k=j; //нашли и печатаем
 printf(“max %i строки = a%i%i = %i\n,i,i,k,a[i][k]);}
Пусть
j=0 j=1 j=2
i=0 1 9 2
i=1 6 1 4
i=2 17 8 9
Что выйдет на экране?
max 0 строки = а01 = 9
max 1 строки = а10 = 6
max 2 строки = а20 = 17
Что изменится, если
printf(“%i\n,a[i][j]);?
9
6
3
17
Упражнение: Дан двумерный массив n x n. Найти местоположение
максимального элемента в этой матрице. Если их несколько, то любой из
них.
void main()
{int a[10][10],i,j,k,n,m;
printf(“n=”); scanf(“%i”, &n);
for (i=0; i<n; i++)
for (j=0; j<n; j++)
scanf(“%i”, &a[i][j]);
k=0; m=0;
for (i=0; i<n; i++)
for (j=0; j<n; j++)
if (a[m][k]<a[i][j]) {m=i; k=j;}
printf(“max a%i%i=%i”,m,k,a[m][k]);}
Упражнение: Дан двумерный массив n x n. Сортировать каждую строку по
убыванию. Результат вывести на экран. Сортировка методом пузырька.
Основной фрагмент программы:
for (i=0; i<n; i++)
for (j=0; j<n; j++)
for (k=0; k<n-j; k++)
if (a[i][k]<a[i][k+1])
{R=a[i][k]; a[i][k]=a[i][k+1]; a[i][k+1]=R;}
Упражнение: Дан двумерный массив Х[1..5][1..4]. Обменять значениями
второй и третий строки.
int x[6][5];
for (i=1;i<=4;i++)
{R=x[2][i]; x[2][i]=x[3][i]; x[3][i]=R;}
Задачи: Дана целочисленная прямоугольная матрица. Определить
1) количество строк, содержащих хотя бы один нулевой элемент
2) номер столбца, в котором находится самая длинная серия одинаковых
элементов
3) сумму элементов в тех строках, которые не содержат отрицательных
элементов
4) максимальное из чисел, встречающихся в заданной матрице более
одного раза.